name: CI Pipeline MLOps

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Configurar Java para Spark
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17' # <<<<<<<<< ALTERE DE '11' PARA '17'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade mlflow

      - name: Criar diretório local para MLflow
        run: |
          mkdir -p ${{ github.workspace }}/mlf_data

      - name: Configurar variáveis de ambiente para notebooks e testes
        run: |
          echo "MLFLOW_DB_PATH=sqlite:///${{ github.workspace }}/mlf_data/mlflow.db" >> $GITHUB_ENV
          echo "RAW_CSV_FILE_PATH=${{ github.workspace }}/dataset/churn-bigml-20.csv" >> $GITHUB_ENV
          echo "CLEAN_PARQUET_FILE_PATH=${{ github.workspace }}/dataset/churn-bigml-80_limpo" >> $GITHUB_ENV
          echo "TRAIN_DATA_PATH=${{ github.workspace }}/dataset/churn-bigml-80.csv" >> $GITHUB_ENV

      - name: Executar exploracao
        run: |
          jupyter nbconvert --to notebook --execute notebooks/01_exploracao.ipynb --output 01_exploracao_output.ipynb --output-dir notebooks
        working-directory: ${{ github.workspace }}

      - name: Executar validacao
        run: |
          jupyter nbconvert --to notebook --execute notebooks/02_pipeline_validacao.ipynb --output 02_pipeline_validacao_output.ipynb --output-dir notebooks
        working-directory: ${{ github.workspace }}

      - name: Executar monitor
        run: |
          jupyter nbconvert --to notebook --execute notebooks/04_monitor_fairness.ipynb --output 04_monitor_fairness_output.ipynb --output-dir notebooks
        working-directory: ${{ github.workspace }}

      - name: Rodar testes automatizados
        run: python -m pytest test_pipeline.py
        working-directory: ${{ github.workspace }}

      - name: Rodar testes com cobertura
        run: |
          pytest --cov=./ \
                --cov-report=xml \
                --cov-fail-under=80 \
                test_pipeline.py
        working-directory: ${{ github.workspace }}
